{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceLocation": {
      "type": "string",
      "defaultValue": "East US 2",
      "metadata": {
        "description": "Azure region where all resources will be deployed. This is distinct from resource group location."
      }
    },
    "masterIP": {
      "type": "string"
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D11_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "allowedValues": [
        "15.10",
        "15.04",
        "14.04.2-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.04, 14.04.2-LTS."
      }
    },    
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (40 or less)."
      },
      "maxValue": 40
    },
    "subnetName1": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "gtronLBEndpoint": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
      "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
          }
      },
      "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "Auto-generated token to access _artifactsLocation"
          }
      },
      "projectName": {
          "type": "string",
          "minLength": 1,
          "metadata": {
              "description": "Name of this project"
          }
      }
  },
  "variables": {
    "vmNamePrefix": "[resourceGroup().name]",
    "apiVersion": "2015-06-15",
    "storageAccountType": "Standard_LRS",
    "saCount": 5,
    "namingInfix": "[toLower(variables('vmNamePrefix'))]",
    "newStorageAccountSuffix": "sa",
    "uniqueStringArray": [
      "[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '1')))]",
      "[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '2')))]",
      "[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '3')))]",
      "[concat(uniqueString(concat(resourceGroup().id, deployment().name, variables('newStorageAccountSuffix'), '4')))]"
    ],
    "vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
    "shareAccountID": "gtronlsa",
    "shareName": "gshare",
    "osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "[concat(variables('vmNamePrefix'), 'Vnet')]",
    "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "subnetName": "[parameters('subnetName1')]",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lbvmss')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "backEndIPConfigID": "[concat(variables('lbID'),'/backendAddressPools/',variables('bePoolName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('ubuntuOSVersion')]",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
      "location": "[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAddress": "[parameters('gtronLBEndpoint')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "GTron9002",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('backEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 9002,
              "backendPort": 9002,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          },
          {
            "name": "GWeb8090",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('backEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8090,
              "backendPort": 8090,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "http",
              "port": 9080,
              "requestpath": "/info/port",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]

      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[parameters('resourceLocation')]",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "storageLoop",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "name": "[variables('osDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage",
              "osType": "linux",
              "image": {
                "uri": "https://gtronlsa.blob.core.windows.net/vhds/gtronk0.vhd"
              }
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {                
                  "name": "configstor",
                  "properties": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.4",
                    "settings": {
                      "fileUris": [
                        "https://raw.githubusercontent.com/ExchMaster/Projects/master/GadgetronV2/GadgetronV2/Templates/configStor.sh"
                      ],
                      "commandToExecute": "[concat('sh configStor.sh ',variables('shareAccountID'),' ',variables('ShareName'),' ',listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('shareAccountID')) ,'2015-06-15').key1)]"
                    }
                  }               
              }
            ]
          }
        }
      }
    }
  ]
}